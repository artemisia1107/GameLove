name: Update GameLove Hosts

on:
  schedule:
    # 每小时自动更新一次
    - cron: '0 * * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-hosts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: 设置 Python 环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 生成 hosts 文件
      run: |
        cd scripts
        python update_hosts.py \
          --workers 32 \
          --dns-timeout 0.6 \
          --race-workers 8 \
          --latency-timeout 0.4 \
          --latency-workers 24 \
          --max-ip-probes 2 \
          --health-retry-base 0 \
          --health-fail-threshold 4

    - name: 执行连通性测试并生成报告
      run: |
        python scripts/connectivity/test_connectivity.py
    
    - name: 检查是否有更新
      id: check_changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "发现文件变更"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "没有文件变更"
        fi
    
    - name: 提交更新
      if: steps.check_changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "🎮 自动更新 GameLove hosts 文件 - $(date '+%Y-%m-%d %H:%M:%S')"
        git push origin main
    
    - name: 获取当前时间
      id: date
      if: steps.check_changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      run: |
        # 设置北京时间 (UTC+8)
        echo "date=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        echo "tag_date=$(TZ='Asia/Shanghai' date '+%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

    - name: 创建发布版本
      if: steps.check_changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: GameLove-Hosts-${{ steps.date.outputs.tag_date }}
        name: GameLove Hosts [${{ steps.date.outputs.date }}]
        body: |
          🎮 GameLove 游戏平台网络优化 - 自动更新
          
          📅 更新时间: ${{ steps.date.outputs.date }}
          🔄 更新方式: 自动更新
          ⚠️ 注意: 只保留最新版本，旧版本会自动清理
          
          ## 🔎 连通性报告
          
          ![Connectivity Badge](https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/connectivity/connectivity_badge.svg)
          
          分层连通性报告（TCP→TLS→HTTP），徽章显示 TLS 成功率。
          
          
          可通过 Raw 方式直接访问：
          - [CONNECTIVITY.md](https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/connectivity/CONNECTIVITY.md)
          - [connectivity_results.json](https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/connectivity/connectivity_results.json)
          
          ## 📥 快速使用
          
          ### 方法一：直接下载
          ```bash
          # Windows (管理员权限)
          curl -o C:\Windows\System32\drivers\etc\hosts https://raw.githubusercontent.com/${{ github.repository }}/main/hosts
          
          # Linux/Mac
          sudo curl -o /etc/hosts https://raw.githubusercontent.com/${{ github.repository }}/main/hosts
          ```
          
          ### 方法二：[SwitchHosts](https://github.com/oldj/SwitchHosts)
          - URL: `https://raw.githubusercontent.com/${{ github.repository }}/main/hosts`
          - 自动刷新: 1小时
          
          ## 🎯 支持平台
          - Steam
          - Epic Games
          - Origin (EA)
          - Uplay (Ubisoft)
          - Battle.net (Blizzard)
          - GOG
          - Rockstar Games
          
          让你"爱"上游戏，解决访问慢、连接超时的问题！
        # 本次发布不附加任何连通性报告附件
        draft: false
        prerelease: false

    - name: 清理旧版本与标签（仅保留最新）
      if: steps.check_changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 获取所有以 GameLove-Hosts- 开头的发布版本，按创建时间排序
        releases=$(gh release list --repo ${{ github.repository }} --limit 100 --json tagName,createdAt | \
          jq -r '.[] | select(.tagName | startswith("GameLove-Hosts-")) | .tagName' | \
          head -n 100)
        
        # 计算需要删除的版本数量
        total_count=$(echo "$releases" | wc -l)
        keep_count=1
        
        if [ $total_count -gt $keep_count ]; then
          delete_count=$((total_count - keep_count))
          echo "总共有 $total_count 个版本，保留最新 $keep_count 个，删除其余 $delete_count 个"
          
          # 获取需要删除的版本（最旧的几个）
          old_releases=$(echo "$releases" | tail -n $delete_count)
          
          # 删除旧版本
          for tag in $old_releases; do
            echo "删除版本: $tag"
            gh release delete "$tag" --repo ${{ github.repository }} --yes --cleanup-tag || echo "删除 $tag 或其 Tag 失败，可能已被删除"
          done
        else
          echo "当前版本数量: $total_count，无需清理（仅保留最新版本策略）"
        fi
